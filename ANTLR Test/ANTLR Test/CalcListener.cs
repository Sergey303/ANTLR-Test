//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.2-SNAPSHOT
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from D:\Users\Admin\Source\Repos\ANTLR Test\ANTLR Test\Calc.g4 by ANTLR 4.2-SNAPSHOT

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591

namespace ANTLR_Test {

	using System;
	using System.Collections;

using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="CalcParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.2-SNAPSHOT")]
[System.CLSCompliant(false)]
public interface ICalcListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="CalcParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterStatement([NotNull] CalcParser.StatementContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CalcParser.statement"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitStatement([NotNull] CalcParser.StatementContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="CalcParser.atom"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAtom([NotNull] CalcParser.AtomContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CalcParser.atom"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAtom([NotNull] CalcParser.AtomContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="CalcParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExpr([NotNull] CalcParser.ExprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CalcParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExpr([NotNull] CalcParser.ExprContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="CalcParser.calc"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterCalc([NotNull] CalcParser.CalcContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CalcParser.calc"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitCalc([NotNull] CalcParser.CalcContext context);

	/// <summary>
	/// Enter a parse tree produced by <see cref="CalcParser.multExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterMultExpression([NotNull] CalcParser.MultExpressionContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="CalcParser.multExpression"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitMultExpression([NotNull] CalcParser.MultExpressionContext context);
}
} // namespace ANTLR_Test
