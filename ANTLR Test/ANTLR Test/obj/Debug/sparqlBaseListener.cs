//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.2-SNAPSHOT
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from D:\Users\Admin\Source\Repos\ANTLR-Test\ANTLR Test\ANTLR Test\sparql.g4 by ANTLR 4.2-SNAPSHOT

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591

namespace ANTLR_Test {

	using System;
	using System.Xml.Linq;	
	using System.Collections;


using Antlr4.Runtime.Misc;
using IErrorNode = Antlr4.Runtime.Tree.IErrorNode;
using ITerminalNode = Antlr4.Runtime.Tree.ITerminalNode;
using IToken = Antlr4.Runtime.IToken;
using ParserRuleContext = Antlr4.Runtime.ParserRuleContext;

/// <summary>
/// This class provides an empty implementation of <see cref="IsparqlListener"/>,
/// which can be extended to create a listener which only needs to handle a subset
/// of the available methods.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.2-SNAPSHOT")]
[System.CLSCompliant(false)]
public partial class sparqlBaseListener : IsparqlListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="sparqlParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterExpression([NotNull] sparqlParser.ExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="sparqlParser.expression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitExpression([NotNull] sparqlParser.ExpressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="sparqlParser.whereClause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterWhereClause([NotNull] sparqlParser.WhereClauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="sparqlParser.whereClause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitWhereClause([NotNull] sparqlParser.WhereClauseContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="sparqlParser.varOrIRIref"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVarOrIRIref([NotNull] sparqlParser.VarOrIRIrefContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="sparqlParser.varOrIRIref"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVarOrIRIref([NotNull] sparqlParser.VarOrIRIrefContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="sparqlParser.graphGraphPattern"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterGraphGraphPattern([NotNull] sparqlParser.GraphGraphPatternContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="sparqlParser.graphGraphPattern"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitGraphGraphPattern([NotNull] sparqlParser.GraphGraphPatternContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="sparqlParser.limitOffsetClauses"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLimitOffsetClauses([NotNull] sparqlParser.LimitOffsetClausesContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="sparqlParser.limitOffsetClauses"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLimitOffsetClauses([NotNull] sparqlParser.LimitOffsetClausesContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="sparqlParser.argList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterArgList([NotNull] sparqlParser.ArgListContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="sparqlParser.argList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitArgList([NotNull] sparqlParser.ArgListContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="sparqlParser.limitClause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterLimitClause([NotNull] sparqlParser.LimitClauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="sparqlParser.limitClause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitLimitClause([NotNull] sparqlParser.LimitClauseContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="sparqlParser.prefixDecl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPrefixDecl([NotNull] sparqlParser.PrefixDeclContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="sparqlParser.prefixDecl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPrefixDecl([NotNull] sparqlParser.PrefixDeclContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="sparqlParser.propertyListNotEmpty"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPropertyListNotEmpty([NotNull] sparqlParser.PropertyListNotEmptyContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="sparqlParser.propertyListNotEmpty"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPropertyListNotEmpty([NotNull] sparqlParser.PropertyListNotEmptyContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="sparqlParser.unaryExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterUnaryExpression([NotNull] sparqlParser.UnaryExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="sparqlParser.unaryExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitUnaryExpression([NotNull] sparqlParser.UnaryExpressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="sparqlParser.propertyList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPropertyList([NotNull] sparqlParser.PropertyListContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="sparqlParser.propertyList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPropertyList([NotNull] sparqlParser.PropertyListContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="sparqlParser.primaryExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPrimaryExpression([NotNull] sparqlParser.PrimaryExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="sparqlParser.primaryExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPrimaryExpression([NotNull] sparqlParser.PrimaryExpressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="sparqlParser.functionCall"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFunctionCall([NotNull] sparqlParser.FunctionCallContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="sparqlParser.functionCall"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFunctionCall([NotNull] sparqlParser.FunctionCallContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="sparqlParser.solutionModifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSolutionModifier([NotNull] sparqlParser.SolutionModifierContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="sparqlParser.solutionModifier"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSolutionModifier([NotNull] sparqlParser.SolutionModifierContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="sparqlParser.orderCondition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOrderCondition([NotNull] sparqlParser.OrderConditionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="sparqlParser.orderCondition"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOrderCondition([NotNull] sparqlParser.OrderConditionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="sparqlParser.describeQuery"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDescribeQuery([NotNull] sparqlParser.DescribeQueryContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="sparqlParser.describeQuery"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDescribeQuery([NotNull] sparqlParser.DescribeQueryContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="sparqlParser.constructQuery"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterConstructQuery([NotNull] sparqlParser.ConstructQueryContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="sparqlParser.constructQuery"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitConstructQuery([NotNull] sparqlParser.ConstructQueryContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="sparqlParser.defaultGraphClause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDefaultGraphClause([NotNull] sparqlParser.DefaultGraphClauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="sparqlParser.defaultGraphClause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDefaultGraphClause([NotNull] sparqlParser.DefaultGraphClauseContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="sparqlParser.triplesSameSubject"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTriplesSameSubject([NotNull] sparqlParser.TriplesSameSubjectContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="sparqlParser.triplesSameSubject"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTriplesSameSubject([NotNull] sparqlParser.TriplesSameSubjectContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="sparqlParser.prologue"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterPrologue([NotNull] sparqlParser.PrologueContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="sparqlParser.prologue"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitPrologue([NotNull] sparqlParser.PrologueContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="sparqlParser.conditionalAndExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterConditionalAndExpression([NotNull] sparqlParser.ConditionalAndExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="sparqlParser.conditionalAndExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitConditionalAndExpression([NotNull] sparqlParser.ConditionalAndExpressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="sparqlParser.additiveExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAdditiveExpression([NotNull] sparqlParser.AdditiveExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="sparqlParser.additiveExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAdditiveExpression([NotNull] sparqlParser.AdditiveExpressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="sparqlParser.builtInCall"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBuiltInCall([NotNull] sparqlParser.BuiltInCallContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="sparqlParser.builtInCall"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBuiltInCall([NotNull] sparqlParser.BuiltInCallContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="sparqlParser.selectQuery"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSelectQuery([NotNull] sparqlParser.SelectQueryContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="sparqlParser.selectQuery"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSelectQuery([NotNull] sparqlParser.SelectQueryContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="sparqlParser.namedGraphClause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNamedGraphClause([NotNull] sparqlParser.NamedGraphClauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="sparqlParser.namedGraphClause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNamedGraphClause([NotNull] sparqlParser.NamedGraphClauseContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="sparqlParser.constructTriples"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterConstructTriples([NotNull] sparqlParser.ConstructTriplesContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="sparqlParser.constructTriples"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitConstructTriples([NotNull] sparqlParser.ConstructTriplesContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="sparqlParser.iRIrefOrFunction"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIRIrefOrFunction([NotNull] sparqlParser.IRIrefOrFunctionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="sparqlParser.iRIrefOrFunction"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIRIrefOrFunction([NotNull] sparqlParser.IRIrefOrFunctionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="sparqlParser.constructTemplate"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterConstructTemplate([NotNull] sparqlParser.ConstructTemplateContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="sparqlParser.constructTemplate"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitConstructTemplate([NotNull] sparqlParser.ConstructTemplateContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="sparqlParser.filter"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterFilter([NotNull] sparqlParser.FilterContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="sparqlParser.filter"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitFilter([NotNull] sparqlParser.FilterContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="sparqlParser.multiplicativeExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterMultiplicativeExpression([NotNull] sparqlParser.MultiplicativeExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="sparqlParser.multiplicativeExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitMultiplicativeExpression([NotNull] sparqlParser.MultiplicativeExpressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="sparqlParser.groupOrUnionGraphPattern"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterGroupOrUnionGraphPattern([NotNull] sparqlParser.GroupOrUnionGraphPatternContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="sparqlParser.groupOrUnionGraphPattern"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitGroupOrUnionGraphPattern([NotNull] sparqlParser.GroupOrUnionGraphPatternContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="sparqlParser.varOrTerm"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVarOrTerm([NotNull] sparqlParser.VarOrTermContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="sparqlParser.varOrTerm"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVarOrTerm([NotNull] sparqlParser.VarOrTermContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="sparqlParser.query"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterQuery([NotNull] sparqlParser.QueryContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="sparqlParser.query"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitQuery([NotNull] sparqlParser.QueryContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="sparqlParser.var"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVar([NotNull] sparqlParser.VarContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="sparqlParser.var"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVar([NotNull] sparqlParser.VarContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="sparqlParser.graphTerm"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterGraphTerm([NotNull] sparqlParser.GraphTermContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="sparqlParser.graphTerm"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitGraphTerm([NotNull] sparqlParser.GraphTermContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="sparqlParser.constraint"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterConstraint([NotNull] sparqlParser.ConstraintContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="sparqlParser.constraint"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitConstraint([NotNull] sparqlParser.ConstraintContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="sparqlParser.regexExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRegexExpression([NotNull] sparqlParser.RegexExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="sparqlParser.regexExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRegexExpression([NotNull] sparqlParser.RegexExpressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="sparqlParser.triplesNode"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTriplesNode([NotNull] sparqlParser.TriplesNodeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="sparqlParser.triplesNode"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTriplesNode([NotNull] sparqlParser.TriplesNodeContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="sparqlParser.objectList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterObjectList([NotNull] sparqlParser.ObjectListContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="sparqlParser.objectList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitObjectList([NotNull] sparqlParser.ObjectListContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="sparqlParser.@object"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterObject([NotNull] sparqlParser.ObjectContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="sparqlParser.@object"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitObject([NotNull] sparqlParser.ObjectContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="sparqlParser.collection"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterCollection([NotNull] sparqlParser.CollectionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="sparqlParser.collection"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitCollection([NotNull] sparqlParser.CollectionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="sparqlParser.triplesBlock"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterTriplesBlock([NotNull] sparqlParser.TriplesBlockContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="sparqlParser.triplesBlock"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitTriplesBlock([NotNull] sparqlParser.TriplesBlockContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="sparqlParser.groupGraphPattern"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterGroupGraphPattern([NotNull] sparqlParser.GroupGraphPatternContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="sparqlParser.groupGraphPattern"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitGroupGraphPattern([NotNull] sparqlParser.GroupGraphPatternContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="sparqlParser.orderClause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOrderClause([NotNull] sparqlParser.OrderClauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="sparqlParser.orderClause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOrderClause([NotNull] sparqlParser.OrderClauseContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="sparqlParser.verb"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterVerb([NotNull] sparqlParser.VerbContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="sparqlParser.verb"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitVerb([NotNull] sparqlParser.VerbContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="sparqlParser.optionalGraphPattern"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOptionalGraphPattern([NotNull] sparqlParser.OptionalGraphPatternContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="sparqlParser.optionalGraphPattern"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOptionalGraphPattern([NotNull] sparqlParser.OptionalGraphPatternContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="sparqlParser.relationalExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRelationalExpression([NotNull] sparqlParser.RelationalExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="sparqlParser.relationalExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRelationalExpression([NotNull] sparqlParser.RelationalExpressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="sparqlParser.basedecl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBasedecl([NotNull] sparqlParser.BasedeclContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="sparqlParser.basedecl"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBasedecl([NotNull] sparqlParser.BasedeclContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="sparqlParser.blankNodePropertyList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBlankNodePropertyList([NotNull] sparqlParser.BlankNodePropertyListContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="sparqlParser.blankNodePropertyList"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBlankNodePropertyList([NotNull] sparqlParser.BlankNodePropertyListContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="sparqlParser.conditionalOrExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterConditionalOrExpression([NotNull] sparqlParser.ConditionalOrExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="sparqlParser.conditionalOrExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitConditionalOrExpression([NotNull] sparqlParser.ConditionalOrExpressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="sparqlParser.numericLiteral"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNumericLiteral([NotNull] sparqlParser.NumericLiteralContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="sparqlParser.numericLiteral"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNumericLiteral([NotNull] sparqlParser.NumericLiteralContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="sparqlParser.numericExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNumericExpression([NotNull] sparqlParser.NumericExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="sparqlParser.numericExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNumericExpression([NotNull] sparqlParser.NumericExpressionContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="sparqlParser.iRIref"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterIRIref([NotNull] sparqlParser.IRIrefContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="sparqlParser.iRIref"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitIRIref([NotNull] sparqlParser.IRIrefContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="sparqlParser.datasetClause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterDatasetClause([NotNull] sparqlParser.DatasetClauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="sparqlParser.datasetClause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitDatasetClause([NotNull] sparqlParser.DatasetClauseContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="sparqlParser.graphNode"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterGraphNode([NotNull] sparqlParser.GraphNodeContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="sparqlParser.graphNode"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitGraphNode([NotNull] sparqlParser.GraphNodeContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="sparqlParser.rDFLiteral"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterRDFLiteral([NotNull] sparqlParser.RDFLiteralContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="sparqlParser.rDFLiteral"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitRDFLiteral([NotNull] sparqlParser.RDFLiteralContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="sparqlParser.graphPatternNotTriples"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterGraphPatternNotTriples([NotNull] sparqlParser.GraphPatternNotTriplesContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="sparqlParser.graphPatternNotTriples"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitGraphPatternNotTriples([NotNull] sparqlParser.GraphPatternNotTriplesContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="sparqlParser.sourceSelector"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterSourceSelector([NotNull] sparqlParser.SourceSelectorContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="sparqlParser.sourceSelector"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitSourceSelector([NotNull] sparqlParser.SourceSelectorContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="sparqlParser.numericLiteralUnsigned"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterNumericLiteralUnsigned([NotNull] sparqlParser.NumericLiteralUnsignedContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="sparqlParser.numericLiteralUnsigned"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitNumericLiteralUnsigned([NotNull] sparqlParser.NumericLiteralUnsignedContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="sparqlParser.valueLogical"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterValueLogical([NotNull] sparqlParser.ValueLogicalContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="sparqlParser.valueLogical"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitValueLogical([NotNull] sparqlParser.ValueLogicalContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="sparqlParser.offsetClause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterOffsetClause([NotNull] sparqlParser.OffsetClauseContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="sparqlParser.offsetClause"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitOffsetClause([NotNull] sparqlParser.OffsetClauseContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="sparqlParser.askQuery"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterAskQuery([NotNull] sparqlParser.AskQueryContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="sparqlParser.askQuery"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitAskQuery([NotNull] sparqlParser.AskQueryContext context) { }

	/// <summary>
	/// Enter a parse tree produced by <see cref="sparqlParser.brackettedExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void EnterBrackettedExpression([NotNull] sparqlParser.BrackettedExpressionContext context) { }
	/// <summary>
	/// Exit a parse tree produced by <see cref="sparqlParser.brackettedExpression"/>.
	/// <para>The default implementation does nothing.</para>
	/// </summary>
	/// <param name="context">The parse tree.</param>
	public virtual void ExitBrackettedExpression([NotNull] sparqlParser.BrackettedExpressionContext context) { }

	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void EnterEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void ExitEveryRule([NotNull] ParserRuleContext context) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitTerminal([NotNull] ITerminalNode node) { }
	/// <inheritdoc/>
	/// <remarks>The default implementation does nothing.</remarks>
	public virtual void VisitErrorNode([NotNull] IErrorNode node) { }
}
} // namespace ANTLR_Test
